# Kafka settings for limit changes sending
limit.changes.kafka.enabled=false
limit.changes.kafka.batch.size=100
limit.changes.kafka.expire.time=1
limit.changes.kafka.expire.chronounit=DAYS

limit.changes.kafka.bootstrap.servers=kafka.local.own:9092
limit.changes.kafka.security.protocol=PLAINTEXT
limit.changes.kafka.producer.acks=all
limit.changes.kafka.producer.topic=payment-limit-changes

# The following parameters must be filled if ${limit.changes.kafka.security.protocol} is SSL or SASL_SSL
# limit.changes.kafka.client.username=username
# limit.changes.kafka.client.password=password
# limit.changes.kafka.security.ssl.key.password= Password of the private key in the key store file.
# limit.changes.kafka.security.ssl.keystore.location= Location of the key store file.
# limit.changes.kafka.security.ssl.keystore.password= Store password for the key store file.
# limit.changes.kafka.security.ssl.truststore.location= Location of the trust store file.
# limit.changes.kafka.security.ssl.truststore.password= Store password for the trust store file.

# Kafka producer
# limit.changes.kafka.producer.retries= Setting a value greater than zero will cause the client to resend any record whose send fails with a potentially transient error
# limit.changes.kafka.producer.batch-size= Default batch size in bytes
# limit.changes.kafka.producer.buffer-memory= The total bytes of memory the producer can use to buffer records waiting to be sent to the server
# limit.changes.kafka.producer.compression-type= The compression type for all data generated by the producer. (none, gzip, snappy or lz4)
